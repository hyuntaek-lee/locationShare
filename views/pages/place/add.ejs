<div id='place'>
    <table>
        <tr>
            <th>동록명</th>
            <td>
                <input type='text' id='placeNm' name='placeNm' v-model='place.pi_placeNm'>
            </td>
        </tr>
        <tr>
            <th>위치</th>
            <td>
                <div id="location"></div>
                <button id="show-modal" v-on:click="showModal = true">지도에서 선택하기</button>
                <modal v-if="showModal" @close="showModal = false"></modal>
                <input type='text' id='latitude' name='latitude' v-model='place.pi_latitude' hidden>
                <input type='text' id='longitude' name='longitude' v-model='place.pi_longitude' hidden>
            </td>
        </tr>
        <tr>
            <th>설명</th>
            <td>
                <textarea style='width: 100%' rows='10' id='description' name='description' v-model='place.pi_description'></textarea>
            </td>
        </tr>
    </table>
    <div class='text-right'>
        <button id='cancelButton' v-on:click="fn_cancel()">취소</button>
        <button id='updateButton' v-on:click="fn_insert()">저장</button>
    </div>
</div>

<!-- template for the modal component -->
<script type="text/x-template" id="modal-template">
    <transition name="modal">
        <div class="modal-mask">
            <div class="modal-wrapper">
                <div class="modal-container">
                    <div class="modal-body">
                        <slot name="body">
                            <div id="map" style="width:100%;height:90%;"></div>
                        </slot>
                    </div>

                    <div class="modal-footer">
                        <slot name="footer">
                            <button class="modal-default-button" @click="$emit('close')">취소</button>
                            <button class="modal-default-button" @click="fn_confirm()">확인</button>
                        </slot>
                    </div>
                </div>
            </div>
        </div>
    </transition>
</script>

<script>
    var modal = Vue.component('modal', {
        template: '#modal-template',
        data: function(){
            return {
                latitude: '',
                longitude: ''
            }
        },
        mounted() {
            if (window.kakao && window.kakao.maps) {
                this.initMap();
            } else {
                const script = document.createElement('script');

                /* global kakao */
                script.onload = () => kakao.maps.load(this.initMap);
                script.src = 'http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=b2561ee3ab78ac87dc6aff5ec5d316b0';
                document.head.appendChild(script);
            }
        },
        methods: {
            initMap() {
                let mapContainer = document.querySelector('#map'),
                    mapOption = {
                        center: new kakao.maps.LatLng(37.515516, 127.023160), // 지도의 중심좌표
                        level: 2, // 지도의 확대 레벨
                    };

                let map = new kakao.maps.Map(mapContainer, mapOption);
                map.setMapTypeId(kakao.maps.MapTypeId.NORMAL);

                // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
                var zoomControl = new kakao.maps.ZoomControl();
                map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

                // 지도를 클릭한 위치에 표출할 마커입니다
                let marker = new kakao.maps.Marker();

                // 지도에 마커를 표시합니다
                marker.setMap(map);

                kakao.maps.event.addListener(map, 'click', function(mouseEvent) {
                    // 클릭한 위도, 경도 정보를 가져옵니다
                    let latlng = mouseEvent.latLng;

                    // 마커 위치를 클릭한 위치로 옮깁니다
                    marker.setPosition(latlng);

                    modal.latitude = latlng.getLat();
                    modal.longitude = latlng.getLng();
                });
            },
            fn_confirm() {
                if (!modal.latitude || modal.latitude === '') {
                    swal('', '선택된 위치가 없습니다.');
                    return;
                }
                app.place.pi_latitude = modal.latitude;
                app.place.pi_longitude = modal.longitude;
                modal.latitude = '';
                modal.longitude = '';
                app.drawMap();
                this.$emit('close');
            }
        }
    });

    var app = new Vue({
        el: '#place',
        data: function(){
            return {
                place: {},
                showModal: false
            }
        },
        methods: {
            drawMap() {
                let mapContainer = document.querySelector('#location');
                mapContainer.style.width = "300px";
                mapContainer.style.height = "300px";

                let mapOption = {
                        center: new kakao.maps.LatLng(app.place.pi_latitude, app.place.pi_longitude),
                        level: 3,
                    };

                let map = new kakao.maps.Map(mapContainer, mapOption);
                map.setMapTypeId(kakao.maps.MapTypeId.NORMAL);

                // 마우스 드래그로 지도 이동 안되도록
                map.setDraggable(false);

                // 마우스 휠로 지도 확대,축소 안되도록
                map.setZoomable(false);

                // 지도를 클릭한 위치에 표출할 마커입니다
                let marker = new kakao.maps.Marker({
                    // 지도 중심좌표에 마커를 생성합니다
                    position: map.getCenter()
                });

                // 지도에 마커를 표시합니다
                marker.setMap(map);
            },
            fn_cancel: function() {
                swal({
                    title: '',
                    text: '취소하시겠습니까?',
                    type: '',
                    buttons: {
                        cancel: {
                            text: '아니요',
                            value: null,
                            visible: true,
                            className: '',
                            closeModal: true,
                        },
                        confirm: {
                            text: '예',
                            value: true,
                            visible: true,
                            className: '',
                            closeModal: true
                        }
                    },
                }).then(function (cancelConfirm) {
                    if (cancelConfirm) {
                        location.href = '/main';
                    }
                });
            },
            fn_insert: function(){
                if (!app.place.pi_placeNm || app.place.pi_placeNm === '') {
                    swal('', '등록명을 입력하세요.');
                    return false;
                }

                if (!app.place.pi_latitude || app.place.pi_latitude === '') {
                    swal('', '위치를 입력하세요.');
                    return false;
                }

                if (!app.place.pi_description || app.place.pi_description === '') {
                    swal('', '설명을 입력하세요.');
                    return false;
                }

                axios.post('/addPlace', app.place)
                    .then(function (response) {
                        let data = response.data.dataInfo;
                        if (data.result == "fail") {
                            swal('', '등록에 실패하였습니다.');
                        } else {
                            swal({
                                title: '',
                                text: '새로운 장소를 등록하였습니다.',
                                type: '',
                                buttons: {
                                    confirm: {
                                        text: '예',
                                        value: true,
                                        visible: true,
                                        className: '',
                                        closeModal: true
                                    }
                                },
                            }).then(function (confirm) {
                                if (confirm) {
                                    location.href = '/main';
                                }
                            });
                        }
                    }.bind(this));
            }
        }
    });
</script>
